// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// GatewayService is an autogenerated mock type for the GatewayService type
type GatewayService struct {
	mock.Mock
}

type GatewayService_Expecter struct {
	mock *mock.Mock
}

func (_m *GatewayService) EXPECT() *GatewayService_Expecter {
	return &GatewayService_Expecter{mock: &_m.Mock}
}

// UpdateGatewayPriority provides a mock function with given fields: ctx, gatewayID, priority
func (_m *GatewayService) UpdateGatewayPriority(ctx context.Context, gatewayID int64, priority string) error {
	ret := _m.Called(ctx, gatewayID, priority)

	if len(ret) == 0 {
		panic("no return value specified for UpdateGatewayPriority")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) error); ok {
		r0 = rf(ctx, gatewayID, priority)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GatewayService_UpdateGatewayPriority_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateGatewayPriority'
type GatewayService_UpdateGatewayPriority_Call struct {
	*mock.Call
}

// UpdateGatewayPriority is a helper method to define mock.On call
//   - ctx context.Context
//   - gatewayID int64
//   - priority string
func (_e *GatewayService_Expecter) UpdateGatewayPriority(ctx interface{}, gatewayID interface{}, priority interface{}) *GatewayService_UpdateGatewayPriority_Call {
	return &GatewayService_UpdateGatewayPriority_Call{Call: _e.mock.On("UpdateGatewayPriority", ctx, gatewayID, priority)}
}

func (_c *GatewayService_UpdateGatewayPriority_Call) Run(run func(ctx context.Context, gatewayID int64, priority string)) *GatewayService_UpdateGatewayPriority_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int64), args[2].(string))
	})
	return _c
}

func (_c *GatewayService_UpdateGatewayPriority_Call) Return(_a0 error) *GatewayService_UpdateGatewayPriority_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GatewayService_UpdateGatewayPriority_Call) RunAndReturn(run func(context.Context, int64, string) error) *GatewayService_UpdateGatewayPriority_Call {
	_c.Call.Return(run)
	return _c
}

// NewGatewayService creates a new instance of GatewayService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGatewayService(t interface {
	mock.TestingT
	Cleanup(func())
}) *GatewayService {
	mock := &GatewayService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
